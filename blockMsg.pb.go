// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blockMsg.proto

package luckyblock

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BlockMessage struct {
	Namespace   string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Version     string `protobuf:"bytes,15,opt,name=version,proto3" json:"version,omitempty"`
	BlockNumber uint64 `protobuf:"varint,25,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Timestamp   int64  `protobuf:"varint,30,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Score       uint32 `protobuf:"varint,35,opt,name=score,proto3" json:"score,omitempty"`
	PeerID      string `protobuf:"bytes,40,opt,name=peerID,proto3" json:"peerID,omitempty"`
	// Links:
	// "parent": parent block hash
	// "txn-1"..."txn-n": transactions belonging to this block
	Links                map[string]string `protobuf:"bytes,45,rep,name=links,proto3" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BlockMessage) Reset()         { *m = BlockMessage{} }
func (m *BlockMessage) String() string { return proto.CompactTextString(m) }
func (*BlockMessage) ProtoMessage()    {}
func (*BlockMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockMsg_6649923b8f90035b, []int{0}
}
func (m *BlockMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockMessage.Unmarshal(m, b)
}
func (m *BlockMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockMessage.Marshal(b, m, deterministic)
}
func (dst *BlockMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockMessage.Merge(dst, src)
}
func (m *BlockMessage) XXX_Size() int {
	return xxx_messageInfo_BlockMessage.Size(m)
}
func (m *BlockMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BlockMessage proto.InternalMessageInfo

func (m *BlockMessage) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *BlockMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BlockMessage) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *BlockMessage) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *BlockMessage) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockMessage) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *BlockMessage) GetPeerID() string {
	if m != nil {
		return m.PeerID
	}
	return ""
}

func (m *BlockMessage) GetLinks() map[string]string {
	if m != nil {
		return m.Links
	}
	return nil
}

func init() {
	proto.RegisterType((*BlockMessage)(nil), "luckyblock.BlockMessage")
	proto.RegisterMapType((map[string]string)(nil), "luckyblock.BlockMessage.LinksEntry")
}

func init() { proto.RegisterFile("blockMsg.proto", fileDescriptor_blockMsg_6649923b8f90035b) }

var fileDescriptor_blockMsg_6649923b8f90035b = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0xc7, 0xd9, 0xa4, 0xa9, 0x74, 0xea, 0x17, 0x83, 0xc8, 0x28, 0x22, 0x8b, 0xbd, 0xec, 0xc5,
	0x1c, 0xf4, 0x52, 0x3d, 0x8a, 0x1e, 0x04, 0xf5, 0x90, 0x37, 0x48, 0xc2, 0x50, 0x42, 0x3e, 0xd9,
	0x4d, 0x0a, 0x79, 0x38, 0xdf, 0x4d, 0x76, 0x62, 0x49, 0x6f, 0xf3, 0xfb, 0xcd, 0xee, 0xfe, 0x77,
	0x06, 0xce, 0xb3, 0xaa, 0xcd, 0xcb, 0x6f, 0xb7, 0x8b, 0x3b, 0xdb, 0xf6, 0x2d, 0x42, 0x35, 0xe4,
	0xe5, 0x28, 0xf2, 0xe1, 0x37, 0x80, 0xd3, 0x37, 0x69, 0xb3, 0x73, 0xe9, 0x8e, 0xf1, 0x0e, 0x56,
	0x4d, 0x5a, 0xb3, 0xeb, 0xd2, 0x9c, 0x29, 0xd2, 0xca, 0xac, 0x92, 0x59, 0x20, 0xc2, 0xc2, 0x03,
	0x81, 0x34, 0xa4, 0x46, 0x82, 0x93, 0x3d, 0x5b, 0x57, 0xb4, 0x0d, 0x5d, 0x88, 0x3e, 0x20, 0x6a,
	0x58, 0x4b, 0xca, 0xcf, 0x50, 0x67, 0x6c, 0xe9, 0x46, 0x2b, 0xb3, 0x48, 0x8e, 0x95, 0x4f, 0xeb,
	0x8b, 0x9a, 0x5d, 0x9f, 0xd6, 0x1d, 0xdd, 0x6b, 0x65, 0xc2, 0x64, 0x16, 0x78, 0x05, 0x91, 0xcb,
	0x5b, 0xcb, 0xb4, 0xd1, 0xca, 0x9c, 0x25, 0x13, 0xe0, 0x35, 0x2c, 0x3b, 0x66, 0xfb, 0xf9, 0x4e,
	0x46, 0xe2, 0xfe, 0x09, 0x5f, 0x20, 0xaa, 0x8a, 0xa6, 0x74, 0xf4, 0xa8, 0x43, 0xb3, 0x7e, 0xda,
	0xc4, 0xf3, 0x98, 0xf1, 0xf1, 0x88, 0xf1, 0x97, 0x3f, 0xf5, 0xd1, 0xf4, 0x76, 0x4c, 0xa6, 0x1b,
	0xb7, 0x5b, 0x80, 0x59, 0xe2, 0x25, 0x84, 0x25, 0x8f, 0xa4, 0xe4, 0x75, 0x5f, 0xfa, 0x8f, 0xec,
	0xd3, 0x6a, 0x60, 0x0a, 0xc4, 0x4d, 0xf0, 0x1a, 0x6c, 0x55, 0xb6, 0x94, 0x95, 0x3e, 0xff, 0x05,
	0x00, 0x00, 0xff, 0xff, 0x87, 0xa7, 0x30, 0xfd, 0x64, 0x01, 0x00, 0x00,
}
